<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--扫描除@Controller之外的注解-->
	<context:component-scan base-package="com">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
	</context:component-scan>


	<!-- 1. 加载数据库的属性文件mysql_druid.properties -->
	<context:property-placeholder
		location="classpath:mysql_druid.properties" />

	<!-- 2. 配置Druid数据源 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="initialSize" value="${jdbc.initialSize}"></property>
	</bean>

	<!-- 3. 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory"
		class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<property name="plugins">
			<array>
				<bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor"></bean>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- 4.配置mybatis的自动扫描：利用Spring生成mapper接口的代理类对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

	<!-- 提供要扫描的接口和映射文件所在的包 -->
	<property name="basePackage" value="com.mapper"></property>
	<property name="sqlSessionFactoryBeanName"
			  value="sqlSessionFactory"></property>
	</bean>

	<!--=================以下是事务注解的相关配置==========-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
 	</bean>

	<!--开启spring的事务注解-->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

	<!--=================以下是通知注解的相关配置==========-->
	<!--开启spring aop的注解配置-->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>








